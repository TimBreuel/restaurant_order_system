<!DOCTYPE html>
<html lang="zxx" class="no-js">

<head>
  <%- include('partials/header') %>
</head>

<body>
  <div class="bg-dark" style="
        width: 100%;
        padding-top: 15px;
        padding-bottom: 15px;
        display: flex;
        justify-content: center;
      ">
    <nav id="nav-menu-container">
      <ul class="nav-menu">
        <li><a href="/login/logout" style="font-size: 18px;">Logout</a></li>
      </ul>
    </nav>
  </div>

  <!-- Start menu-area Area -->
  <section class="menu-area section-gap" id="menu" style="height: 100vh; padding-bottom: 0; padding-top: 40px;">
    <div class="container">
      <div class="filters-content">
        <div class="row grid">
          <!-- JSX LOOP TO RENDER MENU -->



          <div class="col-md-12 all">
            
            <div class="single-menu">
              <!-- 
                <div class="title-wrap d-flex justify-content-between ">
                  <h3 class="text-uppercase ">Table number: #</h3>
                </div>

                <div style="display: flex; justify-content: space-between;">
                  <button
                    class="btn btn-small bg-danger text-white tableResetBtn"
                    tableId=""
                  >
                    Reset
                  </button>
                </div> -->
              <!-- accordion -->
              <!--Accordion wrapper-->
        
               <% order.forEach(meal => { %>
                <div class="tableCollapse ">
                  <h2 class="text-center"><span>+</span> Table number:<%= meal.table_number %></h2>
                  <div>

                    <ul class="card-body">
                   
                      <li> <a href="#" class="font-weight-bold h3 lineThrought">
                          <h4><%= meal.number %> - <%= meal.title %></h4>
                        </a> </li>
                  

                    </ul>
                    <div style="display: flex; justify-content:center;">
                     <a href="#" mealid="<%= meal.id%>" class="DeletMealBtn w-100"> <button style="width: 100%" class="btn btn-small bg-danger text-white tableResetBtn " >
                        Done
                      </button>
                    </a>
                    </div>
                  </div>
              </div>
                <% }) %>
               
                <!-- Accordion card -->


                <!-- accordion -->

              </div>
            </div>


          </div>
        </div>
      </div>
  </section>
  <!-- End menu-area Area -->
  <!-- modal start -->
  <div class="modal" tabindex="-1" role="dialog" id="resultModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delet???</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>are you sure you want to delet </p>
            </div>
            <div class="modal-footer">
                <button type="button" id="modaldeletMealBtn" data-dismiss="modal" class="btn btn-danger">DELET</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">cancel</button>
            </div>
        </div>
    </div>
</div>
<!-- modal end -->

  <%- include('partials/scripts') %>

  <script>
    //accordion 
$(document).ready(function () {
    $('.tableCollapse > h2 > span').click(function (e) { 
        e.preventDefault();
        $('.tableCollapse > div').slideUp(500)
        let current = $(this).text()
          $('.tableCollapse > h2 > span').text('+');
           current=='-' ? $(this).text('+').parent().next().slideUp() : $(this).text('-').parent().next().slideDown()
    });
});


    document.querySelectorAll('.lineThrought').forEach(element => {
      element.addEventListener('click', (e) => {
        e.preventDefault();
        //console.log(e.target);
        e.target.style.textDecoration = "line-through"
        // e.target.classList.toggle('decoration')
      });
    });




    let mealid;

    document.querySelectorAll('.DeletMealBtn').forEach(btn =>{
      btn.addEventListener('click' , e =>{
      e.preventDefault()
      showModal(true, 'Delete', 'are you sure you want to delet, no way to bring it back ...')
      mealid = btn.getAttribute('mealid') 

    })
    })



    document.querySelector("#modaldeletMealBtn").addEventListener('click', (e) => {  //!4
            e.preventDefault() 
            // get parentElement to remove it
            document.querySelector('a[mealid="' + mealid + '"]').parentElement.parentElement.parentElement.remove()
         data = {   //   it muss be as a object
                mealid: mealid
            }
            postDtata('/admin/deleteMeal', data).then((data) => {  
                //hide the delet confirmation modal
                $('#deletConfirmModal').modal('hide')
                if (data.status == 200) {
                    if (data == 1) {
                        showModal(false, 'success', "meal is Deleted")

                    } else {
                        showModal(true, 'error', "meal can not be Deleted")
                    }
                } 
            }).catch(error => {
                showModal(true, 'error', "error from server")

            }) 
        })

        async function postDtata(url = "", data = "") {   // send data to server 
            const response = await fetch(url, {
                method: "Post",
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)  
            })
            return response.json()
        }

  </script>



  <!-- <script>
      /////////////////
      //SERVICE BUTTONS
      const serviceResetBtn = document.querySelectorAll(".serviceResetBtn");
      serviceResetBtn.forEach((btn) => {
        btn.addEventListener("click", (e) => {
          e.preventDefault();
          postData("/login/service/tableService", {
            tableId: e.target.getAttribute("tableId"),
          }).then((data) => {
            if (data === 1) {
              e.target.classList.remove("bg-warning");
              e.target.classList.add("bg-secondary");
            }
          });
        });
      });

      /////////////////
      //PAYMENT BUTTONS
      const payedResetBtn = document.querySelectorAll(".payedResetBtn");
      payedResetBtn.forEach((btn) => {
        btn.addEventListener("click", (e) => {
          e.preventDefault();
          postData("/login/service/tablePayment", {
            tableId: e.target.getAttribute("tableId"),
          }).then((data) => {
            if (data === 1) {
              e.target.classList.remove("bg-primary");
              e.target.classList.add("bg-secondary");
            }
          });
        });
      });

      //POST DATA FETCH
      async function postData(url = "", data = {}) {
        const response = await fetch(url, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });
        return response.json();
      }
    </script>  -->
</body>

</html>